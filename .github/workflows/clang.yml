name: Clang

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CRADLE_THINKNODE_API_TOKEN: ${{ secrets.CRADLE_THINKNODE_API_TOKEN }}
  CRADLE_PREPROCESSOR_DISABLE_LINE_DIRECTIVES: true

jobs:
  clang-12:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        config: [Debug, Release]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.conan/data
        key: ${{runner.os}}-CLANG-12-${{matrix.config}}

    - name: Install
      run: |
        sudo apt install gcovr ocaml-nox
        sudo pip3 install virtualenv

    - name: Configure
      run: |
        export CC=`which clang-12`
        export CXX=`which clang++-12`
        ${CXX} --version
        scripts/set-up-python.sh --python=python3
        source .venv/bin/activate
        cmake -Bbuild -DCMAKE_BUILD_TYPE=${{matrix.config}} .

    - name: Build
      run: >
        cmake --build build --config ${{matrix.config}}
        --target unit_test_runner -j4

    - name: Test
      run: |
        python python/generate_config.py $CRADLE_THINKNODE_API_TOKEN
        cd build
        ctest --output-on-failure --build-config ${{matrix.config}} -R unit_test_coverage

    - name: Upload coverage report
      run: bash <(curl -s https://codecov.io/bash) -X gcov
