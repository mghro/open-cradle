name: MSVC

on: [push, pull_request]

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CRADLE_THINKNODE_API_TOKEN: ${{ secrets.CRADLE_THINKNODE_API_TOKEN }}
  CRADLE_THINKNODE_DOCKER_AUTH: ${{ secrets.CRADLE_THINKNODE_DOCKER_AUTH }}

jobs:

  preprocess:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.conan/data
        key: ${{runner.os}}-GCC-10-${{matrix.config}}

    - name: Install
      run: |
        sudo apt install lcov ocaml-nox
        sudo pip3 install virtualenv

    - name: Preprocess
      run: |
        export CC=`which gcc-10`
        export CXX=`which g++-10`
        ${CXX} --version
        scripts/set-up-python.sh --python=python3
        source .venv/bin/activate
        cmake -Bbuild -DCMAKE_BUILD_TYPE=Debug .
        cmake --build build --target preprocessing -j4

    - name: Upload preprocessed headers
      uses: actions/upload-artifact@v2
      with:
        name: preprocessed
        path: build/generated

  VS2019:
    runs-on: windows-2019
    needs: preprocess

    strategy:
      matrix:
        config: [Debug, Release]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          C:/.conan/data
        key: ${{runner.os}}-MSVC-2019-${{matrix.config}}

    - name: Install Conan
      run: |
        pip install conan

    - name: Download preprocessed headers
      uses: actions/download-artifact@v2
      with:
        name: preprocessed
        path: preprocessed

    - name: Configure
      run: >
        cmake -Bbuild -DCMAKE_BUILD_TYPE=${{matrix.config}}
        -DPREPROCESSOR_USAGE=External
        -DEXTERNALLY_PREPROCESSED_DIRECTORY=preprocessed
        -DLOCAL_DOCKER_TESTING=OFF

    - name: Build & Test
      run: >
        python python/generate_config.py $Env:CRADLE_THINKNODE_API_TOKEN

        cmake --build build --config ${{matrix.config}}
        --target all_unit_tests -j4
